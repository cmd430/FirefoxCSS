const fs = require('fs')
const sass = require('sass')
const inliner = require('@vgrid/sass-inline-svg')

try {
  const { css } = sass.renderSync({
    file: 'src/userChrome.scss',
    outputStyle: 'expanded',
    sourceMap: false,
    omitSourceMapUrl: true,
    functions: {
      'inline-svg($path, $selectors: null)': inliner('./src/')
    }
  })

  const CSS = css.toString().replace(/\(-moz-bool-pref: (.+?)\)/g, `(-moz-bool-pref: "$1")`)
  const FIREFOX_DATA_DIR = process.env.APPDATA + '/Mozilla/Firefox/'
  const FIREFOX_PROFILE = fs.readFileSync(FIREFOX_DATA_DIR + 'installs.ini', {
    encoding:'utf8',
    flag:'r'
  }).match(/^Default=(?<profile>.+)$/mi)?.groups.profile
  const FIREFOX_PROFILE_DIR = `${FIREFOX_DATA_DIR}${FIREFOX_PROFILE}`

  console.debug('Firefox Profile Dir:', FIREFOX_PROFILE_DIR)

  // Write to dist
  fs.writeFileSync('dist/chrome/userChrome.css', CSS)
  fs.copyFileSync('src/userContent.css', 'dist/chrome/userContent.css')
  fs.copyFileSync('src/user.js', 'dist/user.js')

  if (FIREFOX_PROFILE) { // write to profile
    fs.copyFileSync('dist/chrome/userChrome.css', `${FIREFOX_PROFILE_DIR}/chrome/userChrome.css`)
    fs.copyFileSync('dist/chrome/userContent.css', `${FIREFOX_PROFILE_DIR}/chrome/userContent.css`)
    fs.copyFileSync('dist/user.js', `${FIREFOX_PROFILE_DIR}/user.js`)
  }
} catch (err) {
  console.error(err)
}

